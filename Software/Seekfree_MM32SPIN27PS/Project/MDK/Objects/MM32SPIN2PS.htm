<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\MM32SPIN2PS.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\MM32SPIN2PS.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Mar 24 17:13:46 2022
<BR><P>
<H3>Maximum Stack Usage =        368 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
transform &rArr; reverseParkTransform &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[d]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">SysTick_Handler</a><BR>
 <LI><a href="#[1a]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1a]">ADC1_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[22]">ADC2_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[26]">COMP1_2_3_4_5_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[17]">DMA1_Channel1_IRQHandler</a> from isr.o(i.DMA1_Channel1_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[18]">DMA1_Channel2_3_IRQHandler</a> from isr.o(i.DMA1_Channel2_3_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[19]">DMA1_Channel4_5_IRQHandler</a> from isr.o(i.DMA1_Channel4_5_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[13]">EXTI0_1_IRQHandler</a> from isr.o(i.EXTI0_1_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[14]">EXTI2_3_IRQHandler</a> from isr.o(i.EXTI2_3_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[15]">EXTI4_15_IRQHandler</a> from isr.o(i.EXTI4_15_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[16]">HWDIV_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[a]">HardFault_Handler</a> from common.o(i.HardFault_Handler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[25]">I2C1_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[9]">NMI_Handler</a> from common.o(i.NMI_Handler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[f]">PVD_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[10]">PWM_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from common.o(i.PendSV_Handler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[12]">RCC_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[8]">Reset_Handler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[27]">SPI1_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[28]">SPI2_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[4]">SPIInit</a> from slave.o(i.SPIInit) referenced 2 times from slave.o(.data)
 <LI><a href="#[b]">SVC_Handler</a> from common.o(i.SVC_Handler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[2c]">SystemInit</a> from system_mm32spin2xx_p.o(i.SystemInit) referenced from startup_mm32spin2xx_p_keil.o(.text)
 <LI><a href="#[21]">TIM14_IRQHandler</a> from isr.o(i.TIM14_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[23]">TIM16_IRQHandler</a> from isr.o(i.TIM16_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[24]">TIM17_IRQHandler</a> from isr.o(i.TIM17_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[1b]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from isr.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[1c]">TIM1_CC_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[1d]">TIM2_IRQHandler</a> from isr.o(i.TIM2_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[1e]">TIM3_IRQHandler</a> from isr.o(i.TIM3_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[1f]">TIM8_BRK_UP_TRG_COM_IRQHandler</a> from isr.o(i.TIM8_BRK_UP_TRG_COM_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[20]">TIM8_CC_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[29]">UART1_IRQHandler</a> from isr.o(i.UART1_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[2a]">UART2_IRQHandler</a> from isr.o(i.UART2_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[e]">WWDG_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[2d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32spin2xx_p_keil.o(.text)
 <LI><a href="#[6]">cycleRotate</a> from driver.o(i.cycleRotate) referenced 2 times from driver.o(.data)
 <LI><a href="#[7]">driverInit</a> from driver.o(i.driverInit) referenced 2 times from driver.o(.data)
 <LI><a href="#[0]">focInit</a> from foc.o(i.focInit) referenced 2 times from foc.o(.data)
 <LI><a href="#[3]">gainSet</a> from slave.o(i.gainSet) referenced 2 times from slave.o(.data)
 <LI><a href="#[2]">infoGet</a> from slave.o(i.infoGet) referenced 2 times from slave.o(.data)
 <LI><a href="#[2b]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[1]">readEncoder</a> from slave.o(i.readEncoder) referenced 2 times from slave.o(.data)
 <LI><a href="#[5]">sampling</a> from driver.o(i.sampling) referenced 2 times from driver.o(.data)
 <LI><a href="#[2e]">transform</a> from foc.o(i.transform) referenced from foc.o(i.focInit)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(.text)
</UL>
<P><STRONG><a name="[98]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[99]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[9a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[9b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[9c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[9d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[8]"></a>Reset_Handler</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>COMP1_2_3_4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>HWDIV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDrvRegister
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEncoder
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrvRegister
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcOffsetCalibration
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_showuint8
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDrvRegister
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEncoder
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrvRegister
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infoGet
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;positionPID
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampling
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;positionPID
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clarkTransform
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clarkTransform
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampling
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEncoder
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;positionPID
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverseParkTransform
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parkTransform
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clarkTransform
</UL>

<P><STRONG><a name="[3e]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampling
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverInit
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEncoder
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focInit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clarkTransform
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverseParkTransform
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parkTransform
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverseParkTransform
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverseParkTransform
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parkTransform
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampling
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverInit
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEncoder
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;positionPID
</UL>

<P><STRONG><a name="[47]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
</UL>

<P><STRONG><a name="[48]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[96]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_d2iz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;positionPID
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverseParkTransform
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parkTransform
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focInit
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;positionPID
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverseParkTransform
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parkTransform
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focInit
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;positionPID
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[a3]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[a4]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[a5]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[3a]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[42]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[41]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
</UL>

<P><STRONG><a name="[65]"></a>__ARM_scalbn</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[a7]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a8]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[a9]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>AutoCalPllFactor</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, system_mm32spin2xx_p.o(i.AutoCalPllFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>

<P><STRONG><a name="[17]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel2_3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel4_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel4_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_uart_dma
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_dma
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_dma
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[51]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[13]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, isr.o(i.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI0_1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, isr.o(i.EXTI2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI2_3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, isr.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_15_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_vsync
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_uart_vsync
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_vsync
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[56]"></a>EXTI_GetITStatus</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[a]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SystemInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, system_mm32spin2xx_p.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>TIM14_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM14_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM16_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM16_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM17_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM17_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIM2_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, isr.o(i.TIM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM3_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIM8_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM8_BRK_UP_TRG_COM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>UART1_IRQHandler</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, isr.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = UART1_IRQHandler &rArr; ips114_showuint8 &rArr; ips114_showchar &rArr; ips114_set_region &rArr; ips114_writedata_16bit &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_getchar
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_showuint8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>UART2_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, isr.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_cof_uart_interrupt
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_uart_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[64]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, slave.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDrvRegister
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEncoder
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrvRegister
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[69]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[63]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 838 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[66]"></a>__kernel_cos</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[67]"></a>__kernel_poly</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[68]"></a>__kernel_sin</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[6b]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[6c]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[6a]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[ab]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ac]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[ad]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[6e]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[6d]"></a>acos</STRONG> (Thumb, 556 bytes, Stack size 40 bytes, acos.o(i.acos))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = acos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focInit
</UL>

<P><STRONG><a name="[7a]"></a>adc_convert</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, zf_adc.o(i.adc_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampling
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcOffsetCalibration
</UL>

<P><STRONG><a name="[70]"></a>adc_init</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, zf_adc.o(i.adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = adc_init &rArr; adc_pin_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverInit
</UL>

<P><STRONG><a name="[7c]"></a>afio_init</STRONG> (Thumb, 206 bytes, Stack size 36 bytes, zf_gpio.o(i.afio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_pin_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_pin_init
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_pin_init
</UL>

<P><STRONG><a name="[72]"></a>board_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, board.o(i.board_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = board_init &rArr; uart_init &rArr; uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>cos</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverseParkTransform
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parkTransform
</UL>

<P><STRONG><a name="[93]"></a>gpio_get</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, zf_gpio.o(i.gpio_get))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDrvRegister
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEncoder
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrvRegister
</UL>

<P><STRONG><a name="[5b]"></a>gpio_init</STRONG> (Thumb, 190 bytes, Stack size 36 bytes, zf_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_pin_init
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIInit
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
</UL>

<P><STRONG><a name="[5c]"></a>gpio_set</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, zf_gpio.o(i.gpio_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDrvRegister
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEncoder
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrvRegister
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIInit
</UL>

<P><STRONG><a name="[83]"></a>ips114_clear</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, seekfree_ips114_spi.o(i.ips114_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ips114_clear &rArr; ips114_set_region &rArr; ips114_writedata_16bit &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_writedata_16bit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
</UL>

<P><STRONG><a name="[86]"></a>ips114_init</STRONG> (Thumb, 506 bytes, Stack size 16 bytes, seekfree_ips114_spi.o(i.ips114_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ips114_init &rArr; spi_init &rArr; spi_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_clear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_writeIndex
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_writeData
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>ips114_showchar</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, seekfree_ips114_spi.o(i.ips114_showchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ips114_showchar &rArr; ips114_set_region &rArr; ips114_writedata_16bit &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_writedata_16bit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_showstr
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_showuint8
</UL>

<P><STRONG><a name="[82]"></a>ips114_showstr</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, seekfree_ips114_spi.o(i.ips114_showstr))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ips114_showstr &rArr; ips114_showchar &rArr; ips114_set_region &rArr; ips114_writedata_16bit &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_showchar
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infoGet
</UL>

<P><STRONG><a name="[60]"></a>ips114_showuint8</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, seekfree_ips114_spi.o(i.ips114_showuint8))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ips114_showuint8 &rArr; ips114_showchar &rArr; ips114_set_region &rArr; ips114_writedata_16bit &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_showchar
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[2b]"></a>main</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = main &rArr; ips114_init &rArr; spi_init &rArr; spi_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[55]"></a>mt9v03x_dma</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_mt9v03x.o(i.mt9v03x_dma))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
</UL>

<P><STRONG><a name="[62]"></a>mt9v03x_uart_callback</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, seekfree_mt9v03x.o(i.mt9v03x_uart_callback))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[5a]"></a>mt9v03x_vsync</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_mt9v03x.o(i.mt9v03x_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[61]"></a>ov7725_cof_uart_interrupt</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, seekfree_uart_7725.o(i.ov7725_cof_uart_interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>ov7725_dma</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_7725.o(i.ov7725_dma))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
</UL>

<P><STRONG><a name="[54]"></a>ov7725_uart_dma</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_uart_7725.o(i.ov7725_uart_dma))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>ov7725_uart_vsync</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_uart_7725.o(i.ov7725_uart_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>ov7725_vsync</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_7725.o(i.ov7725_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[8d]"></a>positionPID</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, foc.o(i.positionPID))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = positionPID &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
</UL>

<P><STRONG><a name="[77]"></a>pwm_duty_updata</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, zf_pwm.o(i.pwm_duty_updata))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = pwm_duty_updata &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycleRotate
</UL>

<P><STRONG><a name="[7b]"></a>pwm_init</STRONG> (Thumb, 608 bytes, Stack size 56 bytes, zf_pwm.o(i.pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = pwm_init &rArr; pwm_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_pin_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverInit
</UL>

<P><STRONG><a name="[7e]"></a>sin</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverseParkTransform
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parkTransform
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focInit
</UL>

<P><STRONG><a name="[87]"></a>spi_init</STRONG> (Thumb, 390 bytes, Stack size 24 bytes, zf_spi.o(i.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = spi_init &rArr; spi_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_pin_init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
</UL>

<P><STRONG><a name="[8b]"></a>spi_mosi</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, zf_spi.o(i.spi_mosi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_writedata_16bit
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_writeIndex
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_writeData
</UL>

<P><STRONG><a name="[6f]"></a>sqrt</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[92]"></a>systick_delay</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_systick.o(i.systick_delay))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDrvRegister
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEncoder
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrvRegister
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
</UL>

<P><STRONG><a name="[78]"></a>systick_delay_ms</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, zf_systick.o(i.systick_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = systick_delay_ms &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycleRotate
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>uart_getchar</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, zf_uart.o(i.uart_getchar))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>uart_init</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, zf_uart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = uart_init &rArr; uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_pin_init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[74]"></a>clarkTransform</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, foc.o(i.clarkTransform))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = clarkTransform &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
</UL>

<P><STRONG><a name="[0]"></a>focInit</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, foc.o(i.focInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = focInit &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> foc.o(.data)
</UL>
<P><STRONG><a name="[8c]"></a>parkTransform</STRONG> (Thumb, 242 bytes, Stack size 72 bytes, foc.o(i.parkTransform))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = parkTransform &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
</UL>

<P><STRONG><a name="[94]"></a>reverseParkTransform</STRONG> (Thumb, 246 bytes, Stack size 72 bytes, foc.o(i.reverseParkTransform))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = reverseParkTransform &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
</UL>

<P><STRONG><a name="[2e]"></a>transform</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, foc.o(i.transform))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = transform &rArr; reverseParkTransform &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;positionPID
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverseParkTransform
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parkTransform
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clarkTransform
</UL>
<BR>[Address Reference Count : 1]<UL><LI> foc.o(i.focInit)
</UL>
<P><STRONG><a name="[4]"></a>SPIInit</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, slave.o(i.SPIInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SPIInit &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slave.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>gainSet</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, slave.o(i.gainSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gainSet &rArr; writeDrvRegister &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDrvRegister
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrvRegister
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slave.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>infoGet</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, slave.o(i.infoGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = infoGet &rArr; ips114_showstr &rArr; ips114_showchar &rArr; ips114_set_region &rArr; ips114_writedata_16bit &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_showstr
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrvRegister
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slave.o(.data)
</UL>
<P><STRONG><a name="[7f]"></a>readDrvRegister</STRONG> (Thumb, 400 bytes, Stack size 48 bytes, slave.o(i.readDrvRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = readDrvRegister &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infoGet
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gainSet
</UL>

<P><STRONG><a name="[1]"></a>readEncoder</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, slave.o(i.readEncoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = readEncoder &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slave.o(.data)
</UL>
<P><STRONG><a name="[80]"></a>writeDrvRegister</STRONG> (Thumb, 408 bytes, Stack size 48 bytes, slave.o(i.writeDrvRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = writeDrvRegister &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gainSet
</UL>

<P><STRONG><a name="[6]"></a>cycleRotate</STRONG> (Thumb, 348 bytes, Stack size 40 bytes, driver.o(i.cycleRotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = cycleRotate &rArr; pwm_duty_updata &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver.o(.data)
</UL>
<P><STRONG><a name="[79]"></a>dcOffsetCalibration</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, driver.o(i.dcOffsetCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = dcOffsetCalibration &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_convert
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverInit
</UL>

<P><STRONG><a name="[7]"></a>driverInit</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, driver.o(i.driverInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = driverInit &rArr; pwm_init &rArr; pwm_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcOffsetCalibration
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>sampling</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, driver.o(i.sampling))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = sampling &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_convert
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver.o(.data)
</UL>
<P><STRONG><a name="[5d]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_mm32spin2xx_p.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[5e]"></a>SetSysClockToXX</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, system_mm32spin2xx_p.o(i.SetSysClockToXX))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SetSysClockToXX &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[71]"></a>adc_pin_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, zf_adc.o(i.adc_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = adc_pin_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[91]"></a>pwm_pin_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, zf_pwm.o(i.pwm_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pwm_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[95]"></a>spi_pin_init</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, zf_spi.o(i.spi_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = spi_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[97]"></a>uart_pin_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, zf_uart.o(i.uart_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[84]"></a>ips114_set_region</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, seekfree_ips114_spi.o(i.ips114_set_region))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ips114_set_region &rArr; ips114_writedata_16bit &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_writedata_16bit
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_writeIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_clear
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_showchar
</UL>

<P><STRONG><a name="[89]"></a>ips114_writeData</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, seekfree_ips114_spi.o(i.ips114_writeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ips114_writeData &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
</UL>

<P><STRONG><a name="[88]"></a>ips114_writeIndex</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, seekfree_ips114_spi.o(i.ips114_writeIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ips114_writeIndex &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_set_region
</UL>

<P><STRONG><a name="[85]"></a>ips114_writedata_16bit</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, seekfree_ips114_spi.o(i.ips114_writedata_16bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ips114_writedata_16bit &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_clear
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_showchar
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_set_region
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
